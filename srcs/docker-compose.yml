##########
services:
  nginx:
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    ports:
      - 443:443 # host port 443 binds to container port 443
    volumes:
      - ./requirements/nginx/conf/mnegro.42.fr.pem:/etc/ssl/certs/mnegro.42.fr.pem
      - ./requirements/nginx/conf/mnegro.42.fr.key:/etc/ssl/private/mnegro.42.fr.key
      # - ./requirements/nginx/conf/nginx.conf:/etc/nginx/nginx.conf # substitutes existing .conf
      - ./requirements/nginx/conf/server.conf:/etc/nginx/http.d/server.conf
      - wp_data:/var/www/html/wordpress
    restart: on-failure # the policy restarts the container if the exit code indicates an error
    networks:
      - app-network

  wordpress:
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    volumes:
      - wp_data:/var/www/html/wordpress
    restart: on-failure
    networks:
      - app-network

  # mariadb:
  #   build:
  #     context: requirements/mariadb
  #     dockerfile: Dockerfile
  #   environment:
  #     - MARIADB_ROOT_PASSWORD=supersecret-root-pw
  #     - MARIADB_DATABASE=wordpress_db
  #     - MARIADB_USER=wordpress_user
  #     - MARIADB_PASSWORD=supersecret-pw
  #   volumes:
  #     - db_data:/var/lib/mysql # persist database data
  #   restart: on-failure
  #   networks:
  #     - app-network

##########
volumes:
    db_data: # database setup more resilient and manageable
    wp_data:

##########
networks:
  app-network:


##########
# volumes:
#   nginx_certs:
#     driver: local
#     driver_opts:
#       device: ./requirements/nginx/certs
#       o: bind
#       # used with `o: bind` to indicate that the mount is a bind and not a volume mount
#       type: none
#   wordpress_data:
#     driver: local
#     driver_opts:
#       device: ./requirements/wordpress/data
#       o: bind
#       type: none
##########
